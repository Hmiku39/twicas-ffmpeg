const express = require('express');
const bodyParser = require('body-parser');
const { exec } = require('child_process');
const path = require('path');
const fs = require('fs');

const app = express();
const PORT = 3001;

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static('videos'));
app.use('/videos', express.static(path.join(__dirname, 'videos')));


app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'views', 'index.html'));
});

app.post('/download', (req, res) => {
    const url = req.body.url;
    const datetime = req.body.datetime;
    const title = req.body.title;

    if (!url || !datetime || !title) {
        return res.status(400).send('URL、日時、動画タイトルはすべて必須です。');
    }

    const safeDatetime = datetime.replace(/[^0-9a-zA-Z_\-]/g, '_');

    // 日本語タイトルをファイル名で使えるように normalize + サニタイズ（空白や記号対策）
    const normalizedTitle = title.normalize("NFC").replace(/[\/\\:*?"<>|]/g, '_');
    const filename = `${safeDatetime}_${normalizedTitle}.mp4`;
    const outputPath = path.join(__dirname, 'videos', filename);

    if (!fs.existsSync(path.join(__dirname, 'videos'))) {
        fs.mkdirSync(path.join(__dirname, 'videos'));
    }

    const cmd = `ffmpeg -i "${url}" -c copy -bsf:a aac_adtstoasc "${outputPath}"`;

    exec(cmd, (error, stdout, stderr) => {
        if (error) {
        console.error(stderr);
        return res.send(`エラーが発生しました: ${stderr}`);
    }

    const downloadLink = `/videos/${filename}`;
    res.send(`✅ ダウンロード完了！<br><a href="${downloadLink}">動画を開く</a>`);
    });
});


app.listen(PORT, () => {
  console.log(`✅ Web UI: http://localhost:${PORT}`);
});
